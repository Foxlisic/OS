; **********************************************************************
; Модуль инициализации каталога страниц. Описывает доступные страницы
; в памяти по принципу 1:1 в блоке [MM_FREE_PAGES]
; **********************************************************************

; ID  PDE           PTE
; 0  [00400000] -> [00000000]
;                  [00001000]
;                  [00002000]
;                   ....
;                  [003FF000]
; 1  [00401000] -> [00400000]
;                   ....
;
; При обращении, процессор сначала читает 4096-байтный каталог PDBR, 
; где извлекается ссылка на 4кб страницу, содержащие каждую 1024 эл-тов
; ссылок на физические страницы.
;
; К примеру, надо обратиться к адресу [F5F2DA62], делим на фрагменты
; ---
;      A62 Адрес на странице
;   32D    Адрес в таблице (32Dh) 
; F5C      Адрес каталога (F5С >> 2 = 3D7h)
; ---
; Старшие 10 бит указывают на адрес в таблице PDBR, здесь это адрес [F5C]
; Переходим к F5Ch и читаем 32-х битный адрес оттуда. Процессор переходит
; по этому адресу и читает 32Dh-й элемент в каталоге (т.е. из CB4h-го байта)
; Берутся верхние 20 бит + A62h (нижние 12 бит из запроса) и получается
; физический адрес.
; ----------------------------------------------------------------------

paging_enable:

    ; Формирование ссылок на страницы в области страниц [MM_PDBR_LOCATION]
    ; Всего 1024 страницы, описывающие по 4Мб памяти
    mov     edi, MM_PDBR_LOCATION
    mov     ecx, 1024
    
    ; Первая ссылка на страницу + права доступа
    mov     eax, MM_FREE_PAGES
    or      eax, (PDE_PRESENT or PDE_READWRITE)

.r1:

    stosd
    add     eax, 0x1000
    loop    .r1

    ; Теперь заполняем данными сами страницы    
    mov     esi, 0x00000000
    mov     edi, MM_FREE_PAGES

    ; 1024 каталогов по 1024 страниц x 4 байта = 4мб
    mov     ecx, 1024*1024 
    
.r2:
    
    mov     eax, esi
    or      al,  (PTE_READWRITE or PTE_PRESENT)
    stosd

    add     esi, 0x1000
    cmp     esi, [MM_PHYSICAL_SIZE]
    jnb     .zeroall
    loop    .r2
    
.zeroall:

    ; Вычисление, сколько осталось до конца (заполнить нулями)
    ; Это значит, что при любом вызове страницы будет срабатывать исключение,
    ; и будет принято решение о том, откуда страницу вытащить и что туда положить
    
    ; edi = (0x00800000 - edi) / 4
    mov     ecx, edi
    sub     ecx, MM_FREE_PAGES + 0x400000
    neg     ecx
    shr     ecx, 2
    xor     eax, eax
    rep     stosd
    
    ; @todo Простановка первым 4мб отметки GLOBAL

    ; Загрузить в CR3 указатель на PDBR
    mov     eax, MM_PDBR_LOCATION
    mov     cr3, eax

    ; Включение поддержки страниц
    mov     eax, cr0
    or      eax, 0x80000000
    mov     cr0, eax
    jmp     .enable_paging

.enable_paging: ; JMP сюда требуется, чтобы в конвейер записать уже через PAGING

    
