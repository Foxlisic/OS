; Функции для работы с памятью

; Максимальный размер памяти (не менее 4 Мб)
; -----------------------------------------------------------
MAX_memory:

    mov edi, 0x00400000    

.cycle:
    
    ; Проверяем на то, запишется ли значение в память
    mov [es:edi], dword 0x55AA55AA

    ; Если не запишется, то это окончание памяти
    cmp [es:edi], dword 0x55AA55AA
    jne .end

    ; +4 мб
    add edi, 0x00400000
    jc .all
    jmp .cycle

.end: ; То, что определили

    mov eax, edi
    mov [MEMORY_size], eax
    ret

.all: ; Вся память

    mov eax, 0xFFFFFFFF
    ret

; Инициализация CR3 постраничника
; -----------------------------------------------------------
; 0x00100000 CR3 PDBR 4 Kb

PAGING_init:

    ; Очищается PDBR    
    mov edi, PDBR_CR3

    ; Вносим ссылку на нулевой каталог
    mov eax, PDBR_CAT_0 + 0x3
    stosd

    ; Остальные заполняются нулями
    mov ecx, 1023
    xor eax, eax
    rep stosd
    
    ; --- ПАМЯТКА ---
    ; Все последующие каталоги страниц находятся в последней странице собственного каталога,
    ; который описывается. То есть, в PDBR создаются указатели на каталоги по 4Мб, в конце 
    ; каждого 4Мб находится 4кб страница, описывающая 1023 страниц каталога, включая и себя

    ; Тем образом, достигается равномерное покрытие без динамического создания страниц в PDBR.
    ; В PDBR всегда будет закреплено определенное количество банков по 4 мб, равное размеру
    ; физической памяти
    ; --------------

    ; Количество 4 мб страниц (4 Кб x 1024)
    ; Страница, описывающая 4..7 мегабайт 
    mov eax, 0x007FF003 

    mov ecx, [MEMORY_size]
    shr ecx, 12 + 10
    dec ecx

    ; Начинаем перечисление
    mov edi, PDBR_CR3 + 4

.loop: 
    
    stosd       
    pusha

    mov edi, eax
    and edi, 0xFFFFF000
    mov ecx, 1024
    sub eax, 0x3FF000

@@: stosd
    add eax, 0x001000
    loop @b

    ; @TODO очистить страницу в eax позиции
    ; заполнить значениями каталог
    popa
    add eax, 0x00400000
    loop .loop

    ; Очищается первый каталог
    ; ------------------------
    mov edi, PDBR_CAT_0
    mov ecx, 1024
    xor eax, eax
    rep stosd

    ; Заполняется каталог 0 (первые 4 Мб)
    ; ------------------------------------------------
    mov eax, 0x3 ; Present + U/S=1 [super user access]
    mov ecx, 1024
    mov edi, PDBR_CAT_0

@@: stosd
    add eax, 0x1000
    loop @b

    ; ---
    mov eax, PDBR_CR3
    mov cr3, eax

    mov eax, cr0
    or  eax, 0x80000000
    mov cr0, eax

    ; Включение страничного механизма
    jmp $+2

    ret
