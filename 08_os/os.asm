; Самая простая операционная система
; ----------------------------------------------------------------------
; fasm os.asm && dd conv=notrunc if=os.bin of=c.img bs=512 seek=1 count=128 && bochs -f os.bxrc -q
; ----------------------------------------------------------------------

    macro brk { xchg bx, bx }

    org 0x8000

    cli

    ; Установка таблицы дескрипторов
    mov word  [PM_DESCRIPTORS.gdt + 0], (4*8) - 1       ; Количество элементов в GDT
    mov dword [PM_DESCRIPTORS.gdt + 2], PM_DESCRIPTORS  ; Начало GDT, линейный адрес
    lgdt [PM_DESCRIPTORS.gdt]

    ; Установка таблицы прерываний
    mov word  [PM_DESCRIPTORS.idt + 0], 0x7FF         ; Количество элементов в IDT (256) 8*256-1 = 2047
    mov dword [PM_DESCRIPTORS.idt + 2], 0             ; Начало IDT, линейный адрес в 0x0000
    lidt [PM_DESCRIPTORS.idt]

    ; Переход в Protected Mode        
    mov eax, cr0
    or  al,  1
    mov cr0, eax    

    ; Переход к защищенному режиму
    jmp far 0x0008 : PMENTRY

; ----------------------------------------------------------------------    
; Инициализация защищенного режима
; ----------------------------------------------------------------------    

PM_DESCRIPTORS:

.null:  ; Пустой селектор (NULL)
        dd 0, 0        

.code:  ; 08h 4Гб, вся память, сегмент кода

        dw 0xffff              ; limit[15..0]
        dw 0                   ; addr[15..0]
        db 0                   ; addr[23..16]        
        db 80h + (10h + 8)     ; тип=8 (код для чтения) + 10h (s=1) + 80h (p=1), dpl = 0
        db 80h + 0xF + 40h     ; limit[23..16]=0x0f, G=1, D=1
        db 0                   ; addr[31..24]

.data:  ; 10h 4Гб, вся память, данные

        dw 0xffff
        dw 0
        db 0    
        db 80h + (10h + 2)     ; тип=2 (данные для чтения и записи) + 10h (s=1) + 80h (p=1), dpl = 0
        db 80h + 0xF + 40h     ; G=1, D=1, limit=0
        db 0

.tss:   ; 18h Дескриптор TSS

        dw 103                 ; размер TSS (104 байта)
        dw 0                   ; (ссылка на главный TSS)
        db 0
        db 80h + 9             ; 32-битный свободный TSS, P=1
        db 40h                 ; DPL=0, G=0, D=1 (32 битный)
        db 0 

.gdt:   dw 0,0,0               ; Указатель на GDT 
.idt:   dw 0,0,0               ; Указатель на IDT

; ----------------------------------------------------------------------
; ЯДРО ОС, написано на C или Assembler
; ----------------------------------------------------------------------

    use32

PMENTRY:

    ; Назначить новые сегментные регистры
    mov ax, 0x0010
    mov ds, ax
    mov es, ax
    mov ss, ax
    mov fs, ax
    mov gs, ax
    mov esp, 0x00A0000

    ; Определить объем оперативной памяти
    xor eax, eax   
@@: add eax, 0x00400000    
    mov [mem_size], eax
    mov [eax], byte 0x55
    cmp [eax], byte 0x55
    je @b

    jmp entry_main

    ; Включение ядра
    include "kernel.asm"   

; ----------------------------------------------------------------------
; Обработчики прерываний используют ASM-код для лучшей предсказуемости результата
; ----------------------------------------------------------------------

    ; -------------------------------------
    ; (01) Обработчик прерываний от клавиатуры
    ; -------------------------------------

_keyb_isr:

    pushad
    call dev_keyb_isr

    ; EOI
    mov al, 0x20
    out 0x20, al
    popad
    iret

    ; -------------------------------------
    ; Пустое прерывание
    ; -------------------------------------

_irq_isr_null:  

    iret  

    ; -------------------------------------
    ; (02) Обработчик каскада
    ; -------------------------------------

_irq_cascade:

    ; EOI
    mov al, 0x20
    out 0x20, al
    iret
