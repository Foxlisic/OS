// Статусы клавиш - нажаты (FF) или отпущены (00)
uint8_t keyb_state[256];

// Буфер клавиатурных нажатий
uint8_t keyb_buffer[256];

// Текущее положение в буфере
uint8_t keyb_end;
uint8_t keyb_start;

#define KEY_LSHIFT 0x2a
#define KEY_RSHIFT 0x36
#define KEY_LCTRL  0x1d
#define KEY_LALT   0x38

#define KEYSCAN_ENTER  0x1c
#define KEYSCAN_UP     0x48
#define KEYSCAN_DOWN   0x50

void dev_keyb_isr();

/* Трансляция из SCANCODE в ASCII
 */ 

static const uint8_t keyb_ascii_lo[109] = {

/*  0    1    2    3     4    5    6    7    8     9    A    B     C    D   E   F */
    0,   27,  '1', '2', '3', '4', '5', '6', '7',  '8', '9', '0',  '-', '=', 8,  9,    /* 00 */
    'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o',  'p', '[', ']',  10,  0,  'a', 's',  /* 10 */
    'd', 'f', 'g', 'h', 'j', 'k', 'l', ';', 0x27, '`', 0,   0x5C, 'z', 'x','c', 'v',  /* 20 */
    'b', 'n', 'm', ',', '.', '/', 0,   '*', 0,    ' ', 0,   0,    0,    0, 0,   0,    /* 30 */
    0,   0,   0,   0,   0,   1,   0,   0,   0,    0,   '-', 0,    0,    0, '+', 0,    /* 40 */
    0,   0,   0,   0,   0,   0,   0,   0,   0,    0,   0,   0,    0,    0, 0,   0,    /* 50 */
    0,   0,   0,   0,   0,   0,   0,   0,   0,    0,   0,   0,    0                   /* 60 */

};

// Верхний регистр
static const uint8_t keyb_ascii_hi[109] = {

/*  0    1    2    3     4    5    6    7    8    9    A    B    C    D   E   F */    
    0,  255, '!', '@',  '#', '$', '%', '^', '&', '*', '(', ')', '_', '+', 8,  9,     /* 00 */
    'Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P', '{', '}', 10,   0, 'A','S',    /* 10 */
    'D', 'F', 'G', 'H', 'J', 'K', 'L', ':', '"',  '~', 0,  '|', 'Z', 'X','C','V',    /* 20 */
    'B', 'N', 'M', '<', '>', '?',  0,  '*',  0,   ' ', 0,   0,   0,   0,  0,  0,     /* 30 */
     0,   0,   0,   0,   0,   1,   0,   0,   0,    0, '-',  0,   0,   0, '+', 0,     /* 40 */
     0,   0,   0,   0,   0,   0,   0,   0,   0,    0,  0,   0,   0,   0,  0,  0,     /* 50 */
     0,   0,   0,   0,   0,   0,   0,   0,   0,    0,  0,   0,   0                   /* 60 */ 
};
